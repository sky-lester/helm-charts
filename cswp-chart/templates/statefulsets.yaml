{{- if .Values.db.enabled -}}
### DB StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.db.name }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/app: {{ .Values.db.name }}
  serviceName: {{ .Values.db.name }}-svc
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/app: {{ .Values.db.name }}
    spec:
      containers:
      - name: {{ .Values.db.name }}
        image: "{{ .Values.db.image}}:{{ .Values.db.version }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: {{ .Values.db.port }}
        volumeMounts:
        - name: "{{ .Values.db.image}}-pvc"
          mountPath: {{ .Values.db.mountPath }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        envFrom:
          - configMapRef:
              name: {{ .Values.appName }}-config
          - secretRef:
              name: {{ .Values.appName }}-secret
  volumeClaimTemplates:
  - metadata:
      name: "{{ .Values.db.image}}-pvc"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "{{ .Values.db.storage }}"
      storageClassName: "{{ .Values.db.storageClassName }}"
{{- end }}